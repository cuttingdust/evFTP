// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: XMsgCom.proto

#include "XMsgCom.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace XMsg {

inline constexpr XMsgHead::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        servername_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msgsize_{0},
        msgtype_{static_cast< ::XMsg::MsgType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR XMsgHead::XMsgHead(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct XMsgHeadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR XMsgHeadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~XMsgHeadDefaultTypeInternal() {}
  union {
    XMsgHead _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 XMsgHeadDefaultTypeInternal _XMsgHead_default_instance_;

inline constexpr XLoginRes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        restype_{static_cast< ::XMsg::XLoginRes_XLoginResType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR XLoginRes::XLoginRes(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct XLoginResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR XLoginResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~XLoginResDefaultTypeInternal() {}
  union {
    XLoginRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 XLoginResDefaultTypeInternal _XLoginRes_default_instance_;

inline constexpr XLoginReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR XLoginReq::XLoginReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct XLoginReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR XLoginReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~XLoginReqDefaultTypeInternal() {}
  union {
    XLoginReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 XLoginReqDefaultTypeInternal _XLoginReq_default_instance_;
}  // namespace XMsg
static ::_pb::Metadata file_level_metadata_XMsgCom_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_XMsgCom_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_XMsgCom_2eproto = nullptr;
const ::uint32_t TableStruct_XMsgCom_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::XMsg::XMsgHead, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::XMsg::XMsgHead, _impl_.msgsize_),
    PROTOBUF_FIELD_OFFSET(::XMsg::XMsgHead, _impl_.msgtype_),
    PROTOBUF_FIELD_OFFSET(::XMsg::XMsgHead, _impl_.token_),
    PROTOBUF_FIELD_OFFSET(::XMsg::XMsgHead, _impl_.servername_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::XMsg::XLoginReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::XMsg::XLoginReq, _impl_.username_),
    PROTOBUF_FIELD_OFFSET(::XMsg::XLoginReq, _impl_.password_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::XMsg::XLoginRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::XMsg::XLoginRes, _impl_.restype_),
    PROTOBUF_FIELD_OFFSET(::XMsg::XLoginRes, _impl_.token_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::XMsg::XMsgHead)},
        {12, -1, -1, sizeof(::XMsg::XLoginReq)},
        {22, -1, -1, sizeof(::XMsg::XLoginRes)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::XMsg::_XMsgHead_default_instance_._instance,
    &::XMsg::_XLoginReq_default_instance_._instance,
    &::XMsg::_XLoginRes_default_instance_._instance,
};
const char descriptor_table_protodef_XMsgCom_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rXMsgCom.proto\022\004XMsg\032\016XMsgType.proto\"^\n"
    "\010XMsgHead\022\017\n\007msgSize\030\001 \001(\005\022\036\n\007msgType\030\002 "
    "\001(\0162\r.XMsg.MsgType\022\r\n\005token\030\003 \001(\t\022\022\n\nser"
    "verName\030\004 \001(\t\"/\n\tXLoginReq\022\020\n\010username\030\001"
    " \001(\t\022\020\n\010password\030\002 \001(\t\"\205\001\n\tXLoginRes\022.\n\007"
    "resType\030\001 \001(\0162\035.XMsg.XLoginRes.XLoginRes"
    "Type\022\r\n\005token\030\002 \001(\t\"9\n\rXLoginResType\022\n\n\006"
    "XRT_OK\020\000\022\013\n\007XRT_ERR\020\001\022\017\n\013XRT_NO_USER\020\002b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_XMsgCom_2eproto_deps[1] =
    {
        &::descriptor_table_XMsgType_2eproto,
};
static ::absl::once_flag descriptor_table_XMsgCom_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_XMsgCom_2eproto = {
    false,
    false,
    326,
    descriptor_table_protodef_XMsgCom_2eproto,
    "XMsgCom.proto",
    &descriptor_table_XMsgCom_2eproto_once,
    descriptor_table_XMsgCom_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_XMsgCom_2eproto::offsets,
    file_level_metadata_XMsgCom_2eproto,
    file_level_enum_descriptors_XMsgCom_2eproto,
    file_level_service_descriptors_XMsgCom_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_XMsgCom_2eproto_getter() {
  return &descriptor_table_XMsgCom_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_XMsgCom_2eproto(&descriptor_table_XMsgCom_2eproto);
namespace XMsg {
const ::google::protobuf::EnumDescriptor* XLoginRes_XLoginResType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_XMsgCom_2eproto);
  return file_level_enum_descriptors_XMsgCom_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t XLoginRes_XLoginResType_internal_data_[] = {
    196608u, 0u, };
bool XLoginRes_XLoginResType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr XLoginRes_XLoginResType XLoginRes::XRT_OK;
constexpr XLoginRes_XLoginResType XLoginRes::XRT_ERR;
constexpr XLoginRes_XLoginResType XLoginRes::XRT_NO_USER;
constexpr XLoginRes_XLoginResType XLoginRes::XLoginResType_MIN;
constexpr XLoginRes_XLoginResType XLoginRes::XLoginResType_MAX;
constexpr int XLoginRes::XLoginResType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class XMsgHead::_Internal {
 public:
};

XMsgHead::XMsgHead(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:XMsg.XMsgHead)
}
inline PROTOBUF_NDEBUG_INLINE XMsgHead::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : token_(arena, from.token_),
        servername_(arena, from.servername_),
        _cached_size_{0} {}

XMsgHead::XMsgHead(
    ::google::protobuf::Arena* arena,
    const XMsgHead& from)
    : ::google::protobuf::Message(arena) {
  XMsgHead* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, msgsize_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, msgsize_),
           offsetof(Impl_, msgtype_) -
               offsetof(Impl_, msgsize_) +
               sizeof(Impl_::msgtype_));

  // @@protoc_insertion_point(copy_constructor:XMsg.XMsgHead)
}
inline PROTOBUF_NDEBUG_INLINE XMsgHead::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_(arena),
        servername_(arena),
        _cached_size_{0} {}

inline void XMsgHead::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, msgsize_),
           0,
           offsetof(Impl_, msgtype_) -
               offsetof(Impl_, msgsize_) +
               sizeof(Impl_::msgtype_));
}
XMsgHead::~XMsgHead() {
  // @@protoc_insertion_point(destructor:XMsg.XMsgHead)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void XMsgHead::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.token_.Destroy();
  _impl_.servername_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void XMsgHead::Clear() {
// @@protoc_insertion_point(message_clear_start:XMsg.XMsgHead)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _impl_.servername_.ClearToEmpty();
  ::memset(&_impl_.msgsize_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.msgtype_) -
      reinterpret_cast<char*>(&_impl_.msgsize_)) + sizeof(_impl_.msgtype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* XMsgHead::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 37, 2> XMsgHead::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_XMsgHead_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string serverName = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(XMsgHead, _impl_.servername_)}},
    // int32 msgSize = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(XMsgHead, _impl_.msgsize_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(XMsgHead, _impl_.msgsize_)}},
    // .XMsg.MsgType msgType = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(XMsgHead, _impl_.msgtype_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(XMsgHead, _impl_.msgtype_)}},
    // string token = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(XMsgHead, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 msgSize = 1;
    {PROTOBUF_FIELD_OFFSET(XMsgHead, _impl_.msgsize_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .XMsg.MsgType msgType = 2;
    {PROTOBUF_FIELD_OFFSET(XMsgHead, _impl_.msgtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string token = 3;
    {PROTOBUF_FIELD_OFFSET(XMsgHead, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string serverName = 4;
    {PROTOBUF_FIELD_OFFSET(XMsgHead, _impl_.servername_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\0\0\5\12\0\0\0"
    "XMsg.XMsgHead"
    "token"
    "serverName"
  }},
};

::uint8_t* XMsgHead::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XMsg.XMsgHead)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 msgSize = 1;
  if (this->_internal_msgsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_msgsize(), target);
  }

  // .XMsg.MsgType msgType = 2;
  if (this->_internal_msgtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_msgtype(), target);
  }

  // string token = 3;
  if (!this->_internal_token().empty()) {
    const std::string& _s = this->_internal_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "XMsg.XMsgHead.token");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string serverName = 4;
  if (!this->_internal_servername().empty()) {
    const std::string& _s = this->_internal_servername();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "XMsg.XMsgHead.serverName");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XMsg.XMsgHead)
  return target;
}

::size_t XMsgHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XMsg.XMsgHead)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 3;
  if (!this->_internal_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_token());
  }

  // string serverName = 4;
  if (!this->_internal_servername().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_servername());
  }

  // int32 msgSize = 1;
  if (this->_internal_msgsize() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_msgsize());
  }

  // .XMsg.MsgType msgType = 2;
  if (this->_internal_msgtype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgtype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData XMsgHead::_class_data_ = {
    XMsgHead::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* XMsgHead::GetClassData() const {
  return &_class_data_;
}

void XMsgHead::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<XMsgHead*>(&to_msg);
  auto& from = static_cast<const XMsgHead&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:XMsg.XMsgHead)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (!from._internal_servername().empty()) {
    _this->_internal_set_servername(from._internal_servername());
  }
  if (from._internal_msgsize() != 0) {
    _this->_internal_set_msgsize(from._internal_msgsize());
  }
  if (from._internal_msgtype() != 0) {
    _this->_internal_set_msgtype(from._internal_msgtype());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void XMsgHead::CopyFrom(const XMsgHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XMsg.XMsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool XMsgHead::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* XMsgHead::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void XMsgHead::InternalSwap(XMsgHead* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.servername_, &other->_impl_.servername_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(XMsgHead, _impl_.msgtype_)
      + sizeof(XMsgHead::_impl_.msgtype_)
      - PROTOBUF_FIELD_OFFSET(XMsgHead, _impl_.msgsize_)>(
          reinterpret_cast<char*>(&_impl_.msgsize_),
          reinterpret_cast<char*>(&other->_impl_.msgsize_));
}

::google::protobuf::Metadata XMsgHead::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_XMsgCom_2eproto_getter, &descriptor_table_XMsgCom_2eproto_once,
      file_level_metadata_XMsgCom_2eproto[0]);
}
// ===================================================================

class XLoginReq::_Internal {
 public:
};

XLoginReq::XLoginReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:XMsg.XLoginReq)
}
inline PROTOBUF_NDEBUG_INLINE XLoginReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : username_(arena, from.username_),
        password_(arena, from.password_),
        _cached_size_{0} {}

XLoginReq::XLoginReq(
    ::google::protobuf::Arena* arena,
    const XLoginReq& from)
    : ::google::protobuf::Message(arena) {
  XLoginReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:XMsg.XLoginReq)
}
inline PROTOBUF_NDEBUG_INLINE XLoginReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        password_(arena),
        _cached_size_{0} {}

inline void XLoginReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
XLoginReq::~XLoginReq() {
  // @@protoc_insertion_point(destructor:XMsg.XLoginReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void XLoginReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void XLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XMsg.XLoginReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* XLoginReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 39, 2> XLoginReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_XLoginReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(XLoginReq, _impl_.password_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(XLoginReq, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(XLoginReq, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(XLoginReq, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\16\10\10\0\0\0\0\0"
    "XMsg.XLoginReq"
    "username"
    "password"
  }},
};

::uint8_t* XLoginReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XMsg.XLoginReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "XMsg.XLoginReq.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "XMsg.XLoginReq.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XMsg.XLoginReq)
  return target;
}

::size_t XLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XMsg.XLoginReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData XLoginReq::_class_data_ = {
    XLoginReq::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* XLoginReq::GetClassData() const {
  return &_class_data_;
}

void XLoginReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<XLoginReq*>(&to_msg);
  auto& from = static_cast<const XLoginReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:XMsg.XLoginReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void XLoginReq::CopyFrom(const XLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XMsg.XLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool XLoginReq::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* XLoginReq::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void XLoginReq::InternalSwap(XLoginReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata XLoginReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_XMsgCom_2eproto_getter, &descriptor_table_XMsgCom_2eproto_once,
      file_level_metadata_XMsgCom_2eproto[1]);
}
// ===================================================================

class XLoginRes::_Internal {
 public:
};

XLoginRes::XLoginRes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:XMsg.XLoginRes)
}
inline PROTOBUF_NDEBUG_INLINE XLoginRes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : token_(arena, from.token_),
        _cached_size_{0} {}

XLoginRes::XLoginRes(
    ::google::protobuf::Arena* arena,
    const XLoginRes& from)
    : ::google::protobuf::Message(arena) {
  XLoginRes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.restype_ = from._impl_.restype_;

  // @@protoc_insertion_point(copy_constructor:XMsg.XLoginRes)
}
inline PROTOBUF_NDEBUG_INLINE XLoginRes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_(arena),
        _cached_size_{0} {}

inline void XLoginRes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.restype_ = {};
}
XLoginRes::~XLoginRes() {
  // @@protoc_insertion_point(destructor:XMsg.XLoginRes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void XLoginRes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void XLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:XMsg.XLoginRes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _impl_.restype_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* XLoginRes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 28, 2> XLoginRes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_XLoginRes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(XLoginRes, _impl_.token_)}},
    // .XMsg.XLoginRes.XLoginResType resType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(XLoginRes, _impl_.restype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(XLoginRes, _impl_.restype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .XMsg.XLoginRes.XLoginResType resType = 1;
    {PROTOBUF_FIELD_OFFSET(XLoginRes, _impl_.restype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string token = 2;
    {PROTOBUF_FIELD_OFFSET(XLoginRes, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\16\0\5\0\0\0\0\0"
    "XMsg.XLoginRes"
    "token"
  }},
};

::uint8_t* XLoginRes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XMsg.XLoginRes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .XMsg.XLoginRes.XLoginResType resType = 1;
  if (this->_internal_restype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_restype(), target);
  }

  // string token = 2;
  if (!this->_internal_token().empty()) {
    const std::string& _s = this->_internal_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "XMsg.XLoginRes.token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XMsg.XLoginRes)
  return target;
}

::size_t XLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XMsg.XLoginRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 2;
  if (!this->_internal_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_token());
  }

  // .XMsg.XLoginRes.XLoginResType resType = 1;
  if (this->_internal_restype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_restype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData XLoginRes::_class_data_ = {
    XLoginRes::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* XLoginRes::GetClassData() const {
  return &_class_data_;
}

void XLoginRes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<XLoginRes*>(&to_msg);
  auto& from = static_cast<const XLoginRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:XMsg.XLoginRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (from._internal_restype() != 0) {
    _this->_internal_set_restype(from._internal_restype());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void XLoginRes::CopyFrom(const XLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XMsg.XLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool XLoginRes::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* XLoginRes::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void XLoginRes::InternalSwap(XLoginRes* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
  swap(_impl_.restype_, other->_impl_.restype_);
}

::google::protobuf::Metadata XLoginRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_XMsgCom_2eproto_getter, &descriptor_table_XMsgCom_2eproto_once,
      file_level_metadata_XMsgCom_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace XMsg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
